// <auto-generated />
using System;
using AM.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AM.Infrastructure.Migrations
{
    [DbContext(typeof(AMContext))]
    [Migration("20250109090340_second")]
    partial class second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AM.ApplicationCore.Domain.BulletinSoin", b =>
                {
                    b.Property<int>("BulletinSoinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BulletinSoinId"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("PatientFk")
                        .HasColumnType("int");

                    b.HasKey("BulletinSoinId");

                    b.HasIndex("PatientFk");

                    b.ToTable("BulletinSoins");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Intervenant", b =>
                {
                    b.Property<int>("IntervenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IntervenantId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Telephone")
                        .HasColumnType("int");

                    b.Property<int>("TypeIntervenant")
                        .HasColumnType("int");

                    b.HasKey("IntervenantId");

                    b.ToTable("Intervenants");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Telephone")
                        .HasColumnType("int");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Remboursement", b =>
                {
                    b.Property<int>("RemboursementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RemboursementId"));

                    b.Property<int>("BulletinFk")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRemboursement")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Montant")
                        .HasColumnType("double");

                    b.HasKey("RemboursementId");

                    b.HasIndex("BulletinFk");

                    b.ToTable("Remboursements");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Traitement", b =>
                {
                    b.Property<int>("BulletinFk")
                        .HasColumnType("int");

                    b.Property<int>("IntervenantFk")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTraitement")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("BulletinFk", "IntervenantFk", "DateTraitement");

                    b.HasIndex("IntervenantFk");

                    b.ToTable("Traitements");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.BulletinSoin", b =>
                {
                    b.HasOne("AM.ApplicationCore.Domain.Patient", "Patient")
                        .WithMany("BulletinSoins")
                        .HasForeignKey("PatientFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Remboursement", b =>
                {
                    b.HasOne("AM.ApplicationCore.Domain.BulletinSoin", "BulletinSoin")
                        .WithMany("Remboursements")
                        .HasForeignKey("BulletinFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BulletinSoin");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Traitement", b =>
                {
                    b.HasOne("AM.ApplicationCore.Domain.BulletinSoin", "BulletinSoin")
                        .WithMany("Traitements")
                        .HasForeignKey("BulletinFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AM.ApplicationCore.Domain.Intervenant", "Intervenant")
                        .WithMany("Traitements")
                        .HasForeignKey("IntervenantFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BulletinSoin");

                    b.Navigation("Intervenant");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.BulletinSoin", b =>
                {
                    b.Navigation("Remboursements");

                    b.Navigation("Traitements");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Intervenant", b =>
                {
                    b.Navigation("Traitements");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Patient", b =>
                {
                    b.Navigation("BulletinSoins");
                });
#pragma warning restore 612, 618
        }
    }
}
